<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
	<!-- ================================================================================================================
    Customization.  This section contains properties that can be used to customize the script to work with most projects.
    ================================================================================================================= -->

	<!-- Task import customizations.  These paths may need to be tweaked depending on where the MSBuld Extension Pack and
    Community Tasks are stored relative to the project directory. -->
	<PropertyGroup>
		<RepoDir>$(MSBuildProjectDirectory)\</RepoDir>
		<SolutionDir>$(RepoDir)Source\</SolutionDir>
		<NuGetExe>$(SolutionDir).nuget\NuGet.exe</NuGetExe>
	</PropertyGroup>

	<!-- Packaging and publication customizations.  These paths can be tweaked to control where packages are built and
    published. -->
	<PropertyGroup Condition="'$(Configuration)' == ''">
		<Configuration>Release</Configuration>
	</PropertyGroup>
	<PropertyGroup>
		<DistDir>$(RepoDir)Dist\$(Configuration)\</DistDir>
	</PropertyGroup>

	<!-- ================================================================================================================
    Targets.  Customizations should not be required below this point.
    ================================================================================================================= -->

	<Target Name="Info">
		<Message Text="Configuration: $(Configuration)" Importance="high"/>
		<Message Text="DryRun:        Yes" Importance="high" Condition="'$(DryRun)' != ''"/>
		<Message Text="DryRun:        No" Importance="high" Condition="'$(DryRun)' == ''"/>
		<Message Text="DistDir:       $(DistDir)" Importance="high"/>
	</Target>

	<Target Name="RestorePackages">
		<Exec Command="&quot;$(NuGetExe)&quot; restore &quot;$(SolutionDir)Platibus.sln&quot;" />
	</Target>

	<Target Name="Build" DependsOnTargets="BuildPackages"/>

	<Target Name="Publish" DependsOnTargets="PublishPackages"/>

	<Target Name="Clean">
		<ItemGroup>
			<PackageBinaries Include="$(SolutionDir)**\bin\$(Configuration)\*.nupkg"/>
		</ItemGroup>
		<Delete Files="@(PackageBinaries)"/>
		<RemoveDir Directories="$(DistDir)" Condition="Exists('$(DistDir)')" />
	</Target>

	<Target Name="BuildSolution" DependsOnTargets="RestorePackages">
		<ItemGroup>
			<SolutionFile Include="$(SolutionDir)Platibus.sln"/>
		</ItemGroup>
		<Message Text="MSBuild @(SolutionFile) /P:Configuration=$(Configuration);RunTests=$(RunTests);RunIntegrationTests=$(RunIntegrationTests)" Condition="'$(DryRun)' != ''" />
		<MSBuild Projects="@(SolutionFile)" Properties="Configuration=$(Configuration);RunTests=$(RunTests);RunIntegrationTests=$(RunIntegrationTests)" Condition="'$(DryRun)' == ''"/>
	</Target>

	<!-- ================================================================================================================
    Distribution Targets
    ================================================================================================================= -->

	<Target Name="BuildPackages" DependsOnTargets="BuildSolution">
		<ItemGroup>
			<SourcePackage Include="$(SolutionDir)Platibus\bin\$(Configuration)\*.nupkg"/>
			<SourcePackage Include="$(SolutionDir)Platibus.IIS\bin\$(Configuration)\*.nupkg"/>
			<SourcePackage Include="$(SolutionDir)Platibus.SQLite\bin\$(Configuration)\*.nupkg"/>
			<SourcePackage Include="$(SolutionDir)Platibus.RabbitMQ\bin\$(Configuration)\*.nupkg"/>
		</ItemGroup>
		<MakeDir Directories="$(DistDir)" />
		<Copy SourceFiles="@(SourcePackage)" DestinationFolder="$(DistDir)" SkipUnchangedFiles="true"/>
	</Target>

	<Target Name="PublishPackages" DependsOnTargets="BuildPackages">
		<ItemGroup>
			<DistPackage Include="$(DistDir)*.nupkg" Exclude="$(DistDir)*.symbols.nupkg"/>
		</ItemGroup>
		<Message Text="&quot;$(NuGetExe)&quot; push %(DistPackage.FullPath) -ApiKey $(ApiKey)" Condition="'$(DryRun)' != ''" Importance="high"/>
		<Exec Command="&quot;$(NuGetExe)&quot; push %(DistPackage.FullPath) -ApiKey $(ApiKey)" Condition="'$(DryRun)' == ''" />
	</Target>
</Project>
